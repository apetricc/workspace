package drawingpackage;

import csci348.drawings.Drawing;

public class Line {
	protected final int startX;
	protected final int startY;
	protected final int endX;
	protected final int endY;
	
	public Line(int startX, int startY, int endX, int endY) {
		this.startX = startX;
		this.startY = startY;
		this.endX = endX;
		this.endY = endY;
	}
	
	//I have a feeling this will need to use slope intercept form somehow, y = mx + b
	// m = (y2 - y1)/(x2-x1)
	/**
	 *     super.paintComponent(g);

    int linesToDraw = 15;
    int width = getWidth(); 
    int height = getHeight(); 
    int number, y, x, dy, dx;
      x = 0;
      y = height;
      number = 15;
      dx = width / number;
      dy = height / number;
      for( int i = 1; i < number; i++ )
      {
        x += dx;
        y -= dy;
        g.drawLine( 0, 0, y, x );
	 * @param draw
	 */
	
	
	
	public void draw(Drawing draw) {
		int width = Math.abs(endX - startX);
		int height = Math.abs(endY - startY);
		int m = (endY - startY)/(endX - startX);
		int dx = m/width;
		int dy = m/height;
		for (int i = startX; i < endX; i+=dx) {
			for(int j = startY; j < endY; j+=dy) {
				draw.showPoint(i,i*m);
			}//for j				
		}//for i 			
	}//draw
		
	
	
	
	
	
	public void erase(){
		
	}
	
	
	

}
